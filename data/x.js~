var response = '{"ambient":{"sensor":[[-72,14.85],[-64,14.84],[-56,14.86],[-48,14.86],[-40,14.86],[-32,14.86],[-24,14.90],[-16,14.84],[-8,14.87],[0,14.85]]},"shelf1":{"sensor":[[-72,15.49],[-64,15.48],[-56,15.47],[-48,15.48],[-40,15.47],[-32,15.48],[-24,15.47],[-16,15.46],[-8,15.47],[0,15.46]],"fan1a":[[-72,0],[-64,1200],[-56,1100],[-48,1150],[-40,1000],[-32,0],[-24,0],[-16,0],[-8,0],[0,0]],"fan1b":[[-72,0],[-64,0],[-56,0],[-48,0],[-40,0],[-32,0],[-24,0],[-16,0],[-8,0],[0,0]],"fan1c":[[-72,100],[-64,150],[-56,120],[-48,130],[-40,90],[-32,100],[-24,0],[-16,0],[-8,0],[0,0]]},"shelf2":{"sensor":[[-72,14.93],[-64,14.94],[-56,14.92],[-47,14.94],[-39,14.95],[-32,14.95],[-24,14.92],[-16,14.92],[-8,14.94],[0,14.92]],"fan2a":[[-72,0],[-64,100],[-56,500],[-47,1000],[-39,50],[-31,0],[-24,0],[-16,0],[-8,0],[0,0]],"fan2b":[[-72,0],[-64,0],[-56,0],[-47,0],[-39,0],[-31,0],[-24,0],[-16,0],[-8,0],[0,0]]}}';


// Function to create the html elements for a fan
function makeFanGraphElement(shelfName, fanData) {
    var fanDivElement = document.createElement("span");
    fanDivElement.id = shelfName + "." + fanData; // so you can update it later
    // create and add the stuff for a graph here
    var stuff = document.createElement("h2");
    stuff.appendChild(document.createTextNode("This is a fan graph for " + fanData));
    fanDivElement.appendChild(stuff);
    return fanDivElement;
}

// Function to create the html elements for temperature
function makeTempGraphElement(shelfName, sensorName) {
    var tempDivElement = document.createElement("span");
    tempDivElement.id = shelfName + "." + sensorName; // so you can update it later
    // create and add the stuff for a graph here
    var stuff = document.createElement("h2");
    /*stuff.onclick = function (e) {
    	//Fix this bit + install cors chrome
    	var x = document.getElementById(shelfName + "." + sensorName);
    	if (x.style.width === 500) {
    		x.style.width = 50;
    		x.style.height = 40;
    	} else {
    		x.style.width = 500;
    		x.style.height = 400;
    	}
    };*/
    stuff.appendChild(document.createTextNode("This is a temperature graph for " + shelfName + " sensor"));
    tempDivElement.appendChild(stuff);
    return tempDivElement;
}

var first = true;
var charts = {};

function addGraphElements(obj) {
	var graphDivElement = document.getElementById("graphs");
	graphDivElement.style.display = "flex";
    //var graphButtElement = document.getElementById("buttons");

    for (var dataSet in obj) {
		var dsetDivElement = document.createElement("div");
        dsetDivElement.id = dataSet; // will be "ambient", "shelf1" or "shelf2"
		dsetDivElement.style.display = "flex";
		dsetDivElement.style.flexDirection = "column";
		var headingElement = document.createElement("H1");
		headingElement.innerHTML = dataSet;
        dsetDivElement.appendChild(headingElement);
		var newGraphElement = makeTempGraphElement(dataSet, "sensor");
        dsetDivElement.appendChild(newGraphElement);
	    charts[dataSet+".sensor"] = new google.visualization.LineChart(newGraphElement);

        // now add fan graphs - if there are any
        for (var fanGraph in obj[dataSet]) {
			if (fanGraph != "sensor") {
				newGraphElement = makeFanGraphElement(dataSet, "fan")
				dsetDivElement.appendChild(newGraphElement);
				charts[dataSet+".fan"] = new google.visualization.LineChart(newGraphElement);
				break;
			}
		}
        graphDivElement.appendChild(dsetDivElement);
    }
}

function updateGraphs(obj) {
    if (first) {
		addGraphElements(obj);
		first = false;
    }
    var newObj = {};
    for (var dataSet in obj) {
		var data = obj[dataSet];
		var d;
		for (var item in data) {
			if (item == "sensor") {
				d = data[item];
				d.unshift(["Time", "Temp"]);
			} else {
				var n = data[item];
				n.unshift(["Time", item]);
				for (var i = 0; i < n.length; i++) {
					d[i].push(n[i][1]);	 
				}
			}
		}
		newObj[dataSet] = d;
    }
    for (var dataSet in newObj) {
		var data = google.visualization.arrayToDataTable(newObj[dataSet]);
		var tempView = new google.visualization.DataView(data);
		var toHide = [];
		for (var i = 2;i < tempView.getNumberOfColumns();i++) {
			toHide.push(i);
		}
		tempView.hideColumns(toHide);
		//var e = document.getElementById(dataSet + ".sensor");
		//var tempChart = new google.visualization.LineChart(e);
		charts[dataSet + ".sensor"].draw(tempView,
											{	title:"Temperature",
												//curveType: "function",
												width: 500,
												height: 400,
												vAxis: {
													maxValue: 10
												}
											} );
		//var fanChart = null;
		//var c;
		var e = document.getElementById(dataSet + ".fan");
		if (e != null) {
			//fanChart = new google.visualization.LineChart(e);
			var fanView = new google.visualization.DataView(data);
			fanView.hideColumns([1]);
			charts[dataSet + ".fan"].draw(fanView,
										  {  title:"Fan Speed",
											 //curveType: "function",
											 width: 500,
											 height: 400,
											 vAxis: {
											 maxValue: 10
											 },
										  } );
		}
	}
}


	var confxhttp = null;

function statsResponseReceived() {
	console.log('response '+this.readyState +' '+this.status);
	if (this.readyState == 4 && this.status == 200) {
		var graphData = JSON.parse(this.responseText);
		updateGraphs(graphData);
		confxhttp = null;
	}
}

function fireStatsRequest() {
	if (confxhttp)
		confxhttp.abort();
	confxhttp = new XMLHttpRequest();
	confxhttp.onreadystatechange = statsResponseReceived;
	confxhttp.open("GET", "/getData", true);
	confxhttp.send();
	console.log('fired');
}


function loaded() {
    console.log("going");
    fireStatsRequest();
}
google.charts.setOnLoadCallback(fireStatsRequest);
var refreshGraph = setInterval(fireStatsRequest, 5000);
